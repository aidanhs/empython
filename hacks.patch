diff --git a/pyconfig.h.orig b/pyconfig.h
--- a/pyconfig.h
+++ b/pyconfig.h
@@ -269,7 +269,7 @@
 
 /* Define if we can use gcc inline assembler to get and set x87 control word
    */
-#define HAVE_GCC_ASM_FOR_X87 1
+#undef HAVE_GCC_ASM_FOR_X87
 
 /* Define if you have the getaddrinfo function. */
 #define HAVE_GETADDRINFO 1
diff --git a/Modules/zipimport.c b/Modules/zipimport.c
--- a/Modules/zipimport.c
+++ b/Modules/zipimport.c
@@ -812,6 +812,7 @@ error:
 /* Return the zlib.decompress function object, or NULL if zlib couldn't
    be imported. The function is cached when found, so subsequent calls
    don't import zlib again. */
+PyMODINIT_FUNC initzlib(void);
 static PyObject *
 get_decompress_func(void)
 {
@@ -824,6 +825,7 @@ get_decompress_func(void)
            let's avoid a stack overflow. */
         return NULL;
     importing_zlib = 1;
+    initzlib();
     zlib = PyImport_ImportModuleNoBlock("zlib");
     importing_zlib = 0;
     if (zlib != NULL) {
diff --git a/setup.py b/setup.py
--- a/setup.py
+++ b/setup.py
@@ -18,6 +18,7 @@ from distutils.command.install_lib import install_lib
 from distutils.spawn import find_executable
 
 cross_compiling = "_PYTHON_HOST_PLATFORM" in os.environ
+cross_compiling = True
 
 def get_platform():
     # cross build
@@ -442,7 +443,9 @@ class PyBuildExt(build_ext):
             add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
         if cross_compiling:
             self.add_gcc_paths()
-        self.add_multiarch_paths()
+        #self.add_multiarch_paths()
+        add_dir_to_list(self.compiler.library_dirs, './Modules/zlib')
+        add_dir_to_list(self.compiler.include_dirs, './Modules/zlib')
 
         # Add paths specified in the environment variables LDFLAGS and
         # CPPFLAGS for header and library files.
